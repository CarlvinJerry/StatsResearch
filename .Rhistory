basq_CI <- basq_clean %>%
filter(regionname %in% c("Basque Country (Pais Vasco)", "Cataluna")) %>%
mutate(date = as.Date(paste0(year, "-01", "-01"), format = "%Y-%m-%d")) %>%
dplyr::select(date, regionname, gdpcap) %>%
spread(regionname, gdpcap)
names(basq_CI) <- c("date", "Basque", "another")
pre.period <- as.Date(c("1955-01-01", "1975-01-01"))
post.period <- as.Date(c("1976-01-01", "1997-01-01"))
impact <- CausalImpact(basq_CI, pre.period, post.period)
summary(impact)
basq_synth <- basq_clean %>%
rename(Y = gdpcap) %>%
mutate(regionname = as.character(regionname))
ggplot(basq_synth, aes(x=year,y=Y,group=regionno)) +
geom_line(aes(color=as.factor(treat), size=as.factor(treat))) +
geom_vline(xintercept=1975,linetype="dashed", color = "steelblue") + theme_classic() +
labs(title="GDP trend over years for all regions",
y="GDP per capita",x="Years", color = "Treatment group") +
scale_color_manual(labels = c("Control", "Treated"), values = c("#F8766D", "#00BFC4")) +
scale_size_manual(values = c(0.5,1.5), guide = 'none')
# synth
dataprep.out <-
dataprep(
foo = basque
,predictors= c("school.illit",
"school.prim",
"school.med",
"school.high",
"school.post.high"
,"invest"
)
,predictors.op = c("mean")
,dependent     = c("gdpcap")
,unit.variable = c("regionno")
,time.variable = c("year")
,special.predictors = list(
list("gdpcap",1960:1969,c("mean")),
list("sec.agriculture",seq(1961,1969,2),c("mean")),
list("sec.energy",seq(1961,1969,2),c("mean")),
list("sec.industry",seq(1961,1969,2),c("mean")),
list("sec.construction",seq(1961,1969,2),c("mean")),
list("sec.services.venta",seq(1961,1969,2),c("mean")),
list("sec.services.nonventa",seq(1961,1969,2),c("mean")),
list("popdens",1969,c("mean")))
,treatment.identifier  = 17
,controls.identifier   = c(2:16,18)
,time.predictors.prior = c(1964:1969)
,time.optimize.ssr     = c(1960:1969)
,unit.names.variable   = c("regionname")
,time.plot            = c(1955:1997)
)
synth.out = synth(dataprep.out)
# Two native plotting functions.
# Path.plot() plots the synthetic against the actual treated unit data.
path.plot(dataprep.res = dataprep.out, synth.res = synth.out,Xlab="Year",Ylab="GDP Per Capita")
abline(v=1975,lty=2,col="steelblue")
title("Actual vs Synthetic GDP for Basque")
# Gaps.plot() shows the deviation between the synthetic and the actual over time.
#gaps.plot(dataprep.res = dataprep.out, synth.res = synth.out,Xlab="Year",Ylab="Diff in GDP Per Capita")
#abline(v=1975,lty=2,col="red")
# Calculating root mean squared error between actual and synthetic
round(sqrt(mean((dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w))^2)), 2)
labels <- c("DiD", "Causal Impact", "Synthetic Control")
values <- c(-0.85, -0.76, -0.57)
values_df <- data.frame(labels,values)
names(values_df) <- c("Method", "Change in GDP per captia")
kable(values_df)
getwd()
plot(cars)
library(forecast)
library(ggplot2)
library(dplyr)
library(tidyr)
library(stargazer)
library(ggplot2)
library(data.table)
library(tableone)
library(lattice)
library(pwr)
#library(rcompanion)
library(scales)
library(plm)
library(readxl)
library(MatchIt)
library(lfe)
library(Synth)
library(gsynth)
library(panelView)
library(CausalImpact)
library(knitr)
data(basque)
data(basque)
head(basque,10)
data(basque)
head(basque,10)
colnames(basque)
unused <- c("sec.agriculture", "sec.energy" , "sec.industry" , "sec.construction" ,
"sec.services.venta" , "sec.services.nonventa", "school.illit", "school.prim",
"school.med", "school.high", "school.post.high", "popdens")
basq_clean <- basque[,!(names(basque) %in% unused)]
basq_clean <- basq_clean %>%
mutate(post = ifelse(year > 1975, 1, 0),
treat = ifelse(regionname == "Basque Country (Pais Vasco)", 1, 0),
regionname = as.factor(regionname)) %>%
filter(regionno != 1)
unused <- c("sec.agriculture", "sec.energy" , "sec.industry" , "sec.construction" ,
"sec.services.venta" , "sec.services.nonventa", "school.illit", "school.prim",
"school.med", "school.high", "school.post.high", "popdens")
basq_clean <- basque[,!(names(basque) %in% unused)]
basq_clean <- basq_clean %>%
mutate(post = ifelse(year > 1975, 1, 0),
treat = ifelse(regionname == "Basque Country (Pais Vasco)", 1, 0),
regionname = as.factor(regionname)) %>%
filter(regionno != 1)
head(basq_clean)
# Calculating first differences
basq_fdid <- basq_clean %>%
filter(treat == 1)
ggplot(basq_fdid, aes(x=year, y=gdpcap)) +
geom_line(color = "#F8766D") + theme_classic() +
geom_vline(xintercept=1975, color = "steelblue", linetype = "dashed") +
labs(title="GDP trend over years for Basque",
y="GDP per capita",x="Years", color = "Region") +
annotate("text", x = 1970, y = 9, label = "Pre-period", size  =5, color = "steelblue") +
annotate("text", x = 1980, y = 9, label = "Post-period", size  =5, color = "steelblue")
# Calculating first differences
basq_fdid <- basq_clean %>%
filter(treat == 1)
ggplot(basq_fdid, aes(x=year, y=gdpcap)) +
geom_line(color = "#F8766D") + theme_classic() +
geom_vline(xintercept=1975, color = "steelblue", linetype = "dashed") +
labs(title="GDP trend over years for Basque",
y="GDP per capita",x="Years", color = "Region") +
annotate("text", x = 1970, y = 9, label = "Pre-period", size  =5, color = "steelblue") +
annotate("text", x = 1980, y = 9, label = "Post-period", size  =5, color = "steelblue")
# Calculating first differences
basq_fdid <- basq_clean %>%
filter(treat == 1)
ggplot(basq_fdid, aes(x=year, y=gdpcap)) +
geom_line(color = "#F8766D") + theme_classic() +
geom_vline(xintercept=1975, color = "steelblue", linetype = "dashed") +
labs(title="GDP trend over years for Basque",
y="GDP per capita",x="Years", color = "Region") +
annotate("text", x = 1970, y = 9, label = "Pre-period", size  =5, color = "steelblue") +
annotate("text", x = 1980, y = 9, label = "Post-period", size  =5, color = "steelblue")
# Calculating first differences
f_did <- lm(data = basq_fdid, gdpcap ~ post)
stargazer(f_did, type="text")
#Picking the closest control group based on gdp
pre <- basq_clean %>%
filter(post == 0) %>%
left_join(dplyr::select(basq_clean[basq_clean$post==0 & basq_clean$treat == 1, ], gdpcap, year),
by = c("year"= 'year')) %>%
mutate(perc_diff = (gdpcap.y - gdpcap.x) / gdpcap.y) %>%
group_by(regionname) %>%
summarise(gdp_var = abs(var(perc_diff))) %>%
arrange(gdp_var)
# Validating assumption
did_data <- basq_clean %>%
filter(regionname %in% c("Basque Country (Pais Vasco)", "Cataluna"))
ggplot(did_data, aes(x=year, y=gdpcap, group = regionname)) +
geom_line(aes(color = regionname)) +
theme_classic() +
geom_vline(xintercept=1975, color = "steelblue", linetype = "dashed") +
labs(title="GDP trend over years for different regions",
y="GDP per capita",x="Years", color = "Region") +
scale_color_manual(labels = c("Basque (treated)", "Cataluna (control)"), values = c("#00BFC4", "#F8766D"))
# Difference in differences
did <- lm(data = did_data, gdpcap ~ treat*post)
stargazer(did, type="text")
system.date()
getwd()
library(forecast)
library(ggplot2)
library(dplyr)
library(tidyr)
library(stargazer)
library(ggplot2)
library(data.table)
library(tableone)
library(lattice)
library(pwr)
#library(rcompanion)
library(scales)
library(plm)
library(readxl)
library(MatchIt)
library(lfe)
library(Synth)
library(gsynth)
library(panelView)
library(CausalImpact)
library(knitr)
# synth
dataprep.out <-
dataprep(
foo = basque
,predictors= c("school.illit",
"school.prim",
"school.med",
"school.high",
"school.post.high"
,"invest"
)
,predictors.op = c("mean")
,dependent     = c("gdpcap")
,unit.variable = c("regionno")
,time.variable = c("year")
,special.predictors = list(
list("gdpcap",1960:1969,c("mean")),
list("sec.agriculture",seq(1961,1969,2),c("mean")),
list("sec.energy",seq(1961,1969,2),c("mean")),
list("sec.industry",seq(1961,1969,2),c("mean")),
list("sec.construction",seq(1961,1969,2),c("mean")),
list("sec.services.venta",seq(1961,1969,2),c("mean")),
list("sec.services.nonventa",seq(1961,1969,2),c("mean")),
list("popdens",1969,c("mean")))
,treatment.identifier  = 17
,controls.identifier   = c(2:16,18)
,time.predictors.prior = c(1964:1969)
,time.optimize.ssr     = c(1960:1969)
,unit.names.variable   = c("regionname")
,time.plot            = c(1955:1997)
)
synth.out = synth(dataprep.out)
# Two native plotting functions.
# Path.plot() plots the synthetic against the actual treated unit data.
path.plot(dataprep.res = dataprep.out, synth.res = synth.out,Xlab="Year",Ylab="GDP Per Capita")
abline(v=1975,lty=2,col="steelblue")
title("Actual vs Synthetic GDP for Basque")
# Gaps.plot() shows the deviation between the synthetic and the actual over time.
#gaps.plot(dataprep.res = dataprep.out, synth.res = synth.out,Xlab="Year",Ylab="Diff in GDP Per Capita")
#abline(v=1975,lty=2,col="red")
# Calculating root mean squared error between actual and synthetic
round(sqrt(mean((dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w))^2)), 2)
labels <- c("DiD", "Causal Impact", "Synthetic Control")
values <- c(-0.85, -0.76, -0.57)
values_df <- data.frame(labels,values)
names(values_df) <- c("Method", "Change in GDP per captia")
kable(values_df)
library(forecast)
library(ggplot2)
library(dplyr)
library(tidyr)
library(stargazer)
library(ggplot2)
library(data.table)
library(tableone)
library(lattice)
library(pwr)
#library(rcompanion)
library(scales)
library(plm)
library(readxl)
library(MatchIt)
library(lfe)
library(Synth)
library(gsynth)
library(panelView)
library(CausalImpact)
library(knitr)
# synth
dataprep.out <-
dataprep(
foo = basque
,predictors= c("school.illit",
"school.prim",
"school.med",
"school.high",
"school.post.high"
,"invest"
)
,predictors.op = c("mean")
,dependent     = c("gdpcap")
,unit.variable = c("regionno")
,time.variable = c("year")
,special.predictors = list(
list("gdpcap",1960:1969,c("mean")),
list("sec.agriculture",seq(1961,1969,2),c("mean")),
list("sec.energy",seq(1961,1969,2),c("mean")),
list("sec.industry",seq(1961,1969,2),c("mean")),
list("sec.construction",seq(1961,1969,2),c("mean")),
list("sec.services.venta",seq(1961,1969,2),c("mean")),
list("sec.services.nonventa",seq(1961,1969,2),c("mean")),
list("popdens",1969,c("mean")))
,treatment.identifier  = 17
,controls.identifier   = c(2:16,18)
,time.predictors.prior = c(1964:1969)
,time.optimize.ssr     = c(1960:1969)
,unit.names.variable   = c("regionname")
,time.plot            = c(1955:1997)
)
synth.out = synth(dataprep.out)
# Two native plotting functions.
# Path.plot() plots the synthetic against the actual treated unit data.
path.plot(dataprep.res = dataprep.out, synth.res = synth.out,Xlab="Year",Ylab="GDP Per Capita")
abline(v=1975,lty=2,col="steelblue")
title("Actual vs Synthetic GDP for Basque")
# Gaps.plot() shows the deviation between the synthetic and the actual over time.
#gaps.plot(dataprep.res = dataprep.out, synth.res = synth.out,Xlab="Year",Ylab="Diff in GDP Per Capita")
#abline(v=1975,lty=2,col="red")
# Calculating root mean squared error between actual and synthetic
round(sqrt(mean((dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w))^2)), 2)
# Causal Impact
basq_CI <- basq_clean %>%
filter(regionname %in% c("Basque Country (Pais Vasco)", "Cataluna")) %>%
mutate(date = as.Date(paste0(year, "-01", "-01"), format = "%Y-%m-%d")) %>%
dplyr::select(date, regionname, gdpcap) %>%
spread(regionname, gdpcap)
names(basq_CI) <- c("date", "Basque", "another")
pre.period <- as.Date(c("1955-01-01", "1975-01-01"))
post.period <- as.Date(c("1976-01-01", "1997-01-01"))
impact <- CausalImpact(basq_CI, pre.period, post.period)
summary(impact)
impact$series
impact$report
impact$report
impact$model$bsts.model$coefficients
basq_synth <- basq_clean %>%
rename(Y = gdpcap) %>%
mutate(regionname = as.character(regionname))
ggplot(basq_synth, aes(x=year,y=Y,group=regionno)) +
geom_line(aes(color=as.factor(treat), size=as.factor(treat))) +
geom_vline(xintercept=1975,linetype="dashed", color = "steelblue") + theme_classic() +
labs(title="GDP trend over years for all regions",
y="GDP per capita",x="Years", color = "Treatment group") +
scale_color_manual(labels = c("Control", "Treated"), values = c("#F8766D", "#00BFC4")) +
scale_size_manual(values = c(0.5,1.5), guide = 'none')
# synth
dataprep.out <-
dataprep(
foo = basque
,predictors= c("school.illit",
"school.prim",
"school.med",
"school.high",
"school.post.high"
,"invest"
)
,predictors.op = c("mean")
,dependent     = c("gdpcap")
,unit.variable = c("regionno")
,time.variable = c("year")
,special.predictors = list(
list("gdpcap",1960:1969,c("mean")),
list("sec.agriculture",seq(1961,1969,2),c("mean")),
list("sec.energy",seq(1961,1969,2),c("mean")),
list("sec.industry",seq(1961,1969,2),c("mean")),
list("sec.construction",seq(1961,1969,2),c("mean")),
list("sec.services.venta",seq(1961,1969,2),c("mean")),
list("sec.services.nonventa",seq(1961,1969,2),c("mean")),
list("popdens",1969,c("mean")))
,treatment.identifier  = 17
,controls.identifier   = c(2:16,18)
,time.predictors.prior = c(1964:1969)
,time.optimize.ssr     = c(1960:1969)
,unit.names.variable   = c("regionname")
,time.plot            = c(1955:1997)
)
synth.out = synth(dataprep.out)
dataprep.out
# Two native plotting functions.
# Path.plot() plots the synthetic against the actual treated unit data.
path.plot(dataprep.res = dataprep.out, synth.res = synth.out,Xlab="Year",Ylab="GDP Per Capita")
abline(v=1975,lty=2,col="steelblue")
title("Actual vs Synthetic GDP for Basque")
# Gaps.plot() shows the deviation between the synthetic and the actual over time.
#gaps.plot(dataprep.res = dataprep.out, synth.res = synth.out,Xlab="Year",Ylab="Diff in GDP Per Capita")
#abline(v=1975,lty=2,col="red")
# Calculating root mean squared error between actual and synthetic
round(sqrt(mean((dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w))^2)), 2)
impact$report
logSaf <- glm(safcom$Result ~ safcom$X.1 ,family="binomial")
summary(logSaf)
safcom$Returns
safcom
#Fit a linear model
linearModel= lm(safcom$Returns~log(safcom$Value))
lines(log(safcom$Value),fitted(linearModel))
safcom$Value
safcom
#Fit a linear model
linearModel= lm(safcom$Returns~log(safcom$X.1)
plot(linearModel)
#Fit a linear model
linearModel= lm(safcom$Returns~log(safcom$X.1)
plot(linearModel)
quadModel = lm(safcom$Returns~log(safcom$Value)+I(log(safcom$Value)^2))
summary(linearModel)
#Fit a linear model
linearModel= lm(safcom$Returns~log(safcom$X.1)
lines(log(safcom$Value),fitted(linearModel))
summary(linearModel)
quadModel = lm(safcom$Returns~safcom$X.1+I(safcom$X.1)^2))
quadModel = lm(safcom$Returns~safcom$X.1+I(safcom$X.1)^2)
summary(quadModel)
##Kernel regression
kernSmooth = npreg(safcom$Returns~safcom$X.1)
library(knitr)
library(printr)
library(np)
##Kernel regression
kernSmooth = npreg(safcom$Returns~safcom$X.1)
plot(kernSmooth)
points(log(safcom$X.1),safcom$Returns)
summary(kernSmooth)
plot(safcom$Returns,log(safcom$Value), xlab="Safcom returns", ylab="NSE Index Value")
mktLims <- range(safcom$Value)
#Generating Test Data
mkt.grid<-seq(from=mktLims[1], to = mktLims[2] )
#3 cutpoints at ages 150, 155,160
fit<-lm(Returns ~ bs(log(Value),knots = c(150, 155,160)),data = safcom )
summary(fit)
##
#Plotting the Regression Line to the scatterplot
plot(safcom$Returns,safcom$Value,col="grey",ylab="Market",xlab="Safcom")
points(mkt.grid,predict(fit,newdata = list(Value=mkt.grid)),col="darkgreen",lwd=2,type="l")
#adding cutpoints
abline(v=c(150, 155,160),lty=2,col="darkgreen")
age
#loading the Splines Packages
require(splines)
#ISLR contains the Dataset
require(ISLR)
attach(Wage)
Wage
summary(fit)
#3 cutpoints at ages 25 ,50 ,60
fit<-lm(wage ~ bs(age,knots = c(25,40,60)),data = Wage )
summary(fit)
#Plotting the Regression Line to the scatterplot
plot(age,wage,col="grey",xlab="Age",ylab="Wages")
age.grid
agelims<-range(age)
#Generating Test Data
age.grid<-seq(from=agelims[1], to = agelims[2])
agelims
age.grid
#3 cutpoints at ages 25 ,50 ,60
fit<-lm(wage ~ bs(age,knots = c(25,40,60)),data = Wage )
summary(fit)
#Plotting the Regression Line to the scatterplot
plot(age,wage,col="grey",xlab="Age",ylab="Wages")
points(age.grid,predict(fit,newdata = list(age=age.grid)),col="darkgreen",lwd=2,type="l")
#adding cutpoints
abline(v=c(25,40,60),lty=2,col="blue")
fit1<-smooth.spline(age,wage,df=16)
plot(age,wage,col="grey",xlab="Age",ylab="Wages")
points(age.grid,predict(fit,newdata = list(age=age.grid)),col="darkgreen",lwd=2,type="l")
#adding cutpoints
abline(v=c(25,40,60),lty=2,col="darkgreen")
lines(fit1,col="red",lwd=2)
legend("topright",c("Smoothing Spline with 16 df","Cubic Spline"),col=c("red","darkgreen"),lwd=2)
fit1<-smooth.spline(age,wage,df=30)
plot(age,wage,col="grey",xlab="Age",ylab="Wages")
points(age.grid,predict(fit,newdata = list(age=age.grid)),col="darkgreen",lwd=2,type="l")
#adding cutpoints
abline(v=c(25,40,60),lty=2,col="darkgreen")
lines(fit1,col="red",lwd=2)
legend("topright",c("Smoothing Spline with 16 df","Cubic Spline"),col=c("red","darkgreen"),lwd=2)
fit1<-smooth.spline(age,wage,df=30)
plot(age,wage,col="grey",xlab="Age",ylab="Wages")
points(age.grid,predict(fit,newdata = list(age=age.grid)),col="darkgreen",lwd=2,type="l")
#adding cutpoints
abline(v=c(25,40,60),lty=2,col="darkgreen")
lines(fit1,col="red",lwd=2)
legend("topright",c("Smoothing Spline with 16 df","Cubic Spline"),col=c("red","darkgreen"),lwd=2)
#loading the Splines Packages
require(splines)
#ISLR contains the Dataset
require(ISLR)
attach(Wage)
agelims<-range(age)
#Generating Test Data
age.grid<-seq(from=agelims[1], to = agelims[2])
#3 cutpoints at ages 25 ,50 ,60
fit<-lm(wage ~ bs(age,knots = c(25,40,60)),data = Wage )
#3 cutpoints at ages 25 ,50 ,60
fit<-lm(wage ~ bs(age,knots = c(25,40,60)),data = Wage )
summary(fit)
#Plotting the Regression Line to the scatterplot
plot(age,wage,col="grey",xlab="Age",ylab="Wages")
points(age.grid,predict(fit,newdata = list(age=age.grid)),col="darkgreen",lwd=2,type="l")
#adding cutpoints
abline(v=c(25,40,60),lty=2,col="blue")
fit1<-smooth.spline(age,wage,df=30)
plot(age,wage,col="grey",xlab="Age",ylab="Wages")
points(age.grid,predict(fit,newdata = list(age=age.grid)),col="darkgreen",lwd=2,type="l")
#adding cutpoints
abline(v=c(25,40,60),lty=2,col="darkgreen")
lines(fit1,col="red",lwd=2)
legend("topright",c("Smoothing Spline with 16 df","Cubic Spline"),col=c("red","darkgreen"),lwd=2)
fit1<-smooth.spline(age,wage,df=16)
plot(age,wage,col="grey",xlab="Age",ylab="Wages")
points(age.grid,predict(fit,newdata = list(age=age.grid)),col="darkgreen",lwd=2,type="l")
#adding cutpoints
abline(v=c(25,40,60),lty=2,col="darkgreen")
lines(fit1,col="red",lwd=2)
fit1<-smooth.spline(age,wage,df=40)
plot(age,wage,col="grey",xlab="Age",ylab="Wages")
points(age.grid,predict(fit,newdata = list(age=age.grid)),col="darkgreen",lwd=2,type="l")
#adding cutpoints
abline(v=c(25,40,60),lty=2,col="darkgreen")
lines(fit1,col="red",lwd=2)
legend("topright",c("Smoothing Spline with 16 df","Cubic Spline"),col=c("red","darkgreen"),lwd=2)
fit1<-smooth.spline(age,wage,df=10)
plot(age,wage,col="grey",xlab="Age",ylab="Wages")
points(age.grid,predict(fit,newdata = list(age=age.grid)),col="darkgreen",lwd=2,type="l")
#adding cutpoints
abline(v=c(25,40,60),lty=2,col="darkgreen")
lines(fit1,col="red",lwd=2)
legend("topright",c("Smoothing Spline with 16 df","Cubic Spline"),col=c("red","darkgreen"),lwd=2)
